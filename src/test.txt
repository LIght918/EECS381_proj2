0 Strings using 0 bytes

Watch them go in and out of scope
in test_fn1:
Good morning!Good night!
2 Strings using 26 bytes
0 Strings using 0 bytes

Demonstrate initialization and copy and move construction
Initialize a with String a = "Hello";
Construct b from a
Construct c from a + b
a:Hello b:Hello c:HelloHello
Construct d from function return value
in test_fn2
test_fn2 returning: xxx
d:xxx
-2 Strings using -10572418 bytes

Demonstrate assignment operators
Assign from a C-string
Assign from another String
Assign from a + b
a:Good Morning! b:Good Morning! c:Good Morning!Good Morning!
-4 Strings using -14777212 bytes

Demonstrate call and return by value
Call a function with a call-by-value argument that returns that same variable
test_fn3 got:initial a
-4 Strings using -14777237 bytes
test_fn3 returning: !!!
-4 Strings using -14777233 bytes
function call result: !!!
Call the same function with an argument of a + b
test_fn3 got:initial a!!!
-6 Strings using -23179198 bytes
test_fn3 returning: !!!
-6 Strings using -23179194 bytes
function call result: !!!
a:initial a b:!!! c:!!!
-9 Strings using -31588553 bytes

Demonstrate move construction and assignment using std::move
a has aaa
-11 Strings using -31588567 bytes
move construct b from a
a now has "p]c;<", b has "aaa"
-11 Strings using -31588567 bytes
now move assign a from b
a now has "aaa", b has "p]c;<"
-11 Strings using -31588567 bytes

Demonstrate swaping
-11 Strings using -31588563 bytes
a now has "aaa", b has "bbb"
let's swap their guts with String::swap!
a now has "bbb", b has "aaa"
let's swap their guts back with std::swap which uses std::move through a temporary String!
a now has "aaa", b has "bbb"
-12 Strings using -111955169 bytes
